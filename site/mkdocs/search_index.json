{
    "docs": [
        {
            "location": "/", 
            "text": "Data Structures \n Algorithms\n\n\n\n\nAlgorithms + Data Structures = Programs\n\n\n\n\nIn computer science, a data structure is a particular way of organizing data in a computer so that it can be used efficiently. Data structures can implement one or more particular abstract data types (ADT), which specify the operations that can be performed on a data structure and the computional complexity of those operations. In comparison, a data structure is a concrete implementation of the specification provided by an ADT.\n\n\nIn mathematics and computer science, an algorithm is a self-contained step-by-step set of operations to be performed. Algorithms perform calculation, data processing, and/or automated reasoning tasks.\n\n\nNote:\n this notebook is inprogress. Feel free to \ncontribute", 
            "title": "Home"
        }, 
        {
            "location": "/#data-structures-algorithms", 
            "text": "Algorithms + Data Structures = Programs   In computer science, a data structure is a particular way of organizing data in a computer so that it can be used efficiently. Data structures can implement one or more particular abstract data types (ADT), which specify the operations that can be performed on a data structure and the computional complexity of those operations. In comparison, a data structure is a concrete implementation of the specification provided by an ADT.  In mathematics and computer science, an algorithm is a self-contained step-by-step set of operations to be performed. Algorithms perform calculation, data processing, and/or automated reasoning tasks.  Note:  this notebook is inprogress. Feel free to  contribute", 
            "title": "Data Structures &amp; Algorithms"
        }, 
        {
            "location": "/d_array/", 
            "text": "Arrays", 
            "title": "Arrays"
        }, 
        {
            "location": "/d_array/#arrays", 
            "text": "", 
            "title": "Arrays"
        }, 
        {
            "location": "/a_graph_theory/", 
            "text": "Graph Theory\n\n\nShortest Path Problem\n\n\n\n\nShortest path (A, C, E, D, F) between vertices A and F in the weighted directed graph\n\n\nIn graph theory, the shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.\n\n\n\n\n\n\n\n\na\n\n\nb\n\n\n\n\n\n\nc\n\n\nd\n\n\n\n\n\n\n\n\n\nSingle-source shortest path problem\n\n\nDijkstra's algorithm\n\n\n\n\nDijkstra's algorithm is an algorithm for finding the shortest paths between nodes in a graph, which may represent, for example, road networks. It was conceived by computer scientist Edsger W. Dijkstra in 1956 and published three years later.", 
            "title": "Graph Theory"
        }, 
        {
            "location": "/a_graph_theory/#graph-theory", 
            "text": "", 
            "title": "Graph Theory"
        }, 
        {
            "location": "/a_graph_theory/#shortest-path-problem", 
            "text": "Shortest path (A, C, E, D, F) between vertices A and F in the weighted directed graph  In graph theory, the shortest path problem is the problem of finding a path between two vertices (or nodes) in a graph such that the sum of the weights of its constituent edges is minimized.     a  b    c  d", 
            "title": "Shortest Path Problem"
        }, 
        {
            "location": "/a_graph_theory/#single-source-shortest-path-problem", 
            "text": "", 
            "title": "Single-source shortest path problem"
        }, 
        {
            "location": "/a_graph_theory/#dijkstras-algorithm", 
            "text": "Dijkstra's algorithm is an algorithm for finding the shortest paths between nodes in a graph, which may represent, for example, road networks. It was conceived by computer scientist Edsger W. Dijkstra in 1956 and published three years later.", 
            "title": "Dijkstra's algorithm"
        }
    ]
}